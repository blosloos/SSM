% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_load.r
\name{calc_load}
\alias{calc_load}
\title{Calculate local and cumulated loads of a compound in a river network}
\usage{
calc_load(
  ID,
  ID_next,
  inhabitants,
  compound_load_gramm_per_capita_and_day,
  compound_elimination_method = NULL,
  compound_elimination_STP = NULL,
  STP_treatment_steps = NULL,
  STP_elimination_rates = FALSE,
  with_lake_elimination = TRUE,
  lake_eliminination_rates = NULL,
  add_absolute_load = FALSE,
  absolute_loads = FALSE,
  return_data = "loads"
)
}
\arguments{
\item{ID}{Character or integer vector containing the IDs of river network nodes such as sewage treatment plants (STPs), lakes or similar.
If not specified (the default), a sequential ID is generated.}

\item{ID_next}{Character or integer vector of length equal to ID, containing the ID of the next node directly downstream of each node (if any, else set entry to NA).}

\item{inhabitants}{Integer vector of length equal to ID. Number of inhabitants which are treated by an individual STP node (0 or NA for lakes).}

\item{compound_load_gramm_per_capita_and_day}{Single numeric value. Amount of the compound excreted per person and day \verb{[g / d]}.}

\item{compound_elimination_method}{Strings \code{"compound_specific"} or \code{"node_specific"} on how to calculate compound elimination, cp. Details.}

\item{compound_elimination_STP}{Required for compound_elimination_method \code{"compound_specific"}.
Single-row dataframe with elimination fractions \verb{[0, 1]} for the following STP treatment steps aka column names:
\itemize{
\item COD_treatment
\item nitrification
\item denitrification
\item P_elimination
\item GAC
\item combi
\item ozonation
\item PAC
\item undefined: placeholder for yet unspecified but scheduled advanced treatment, e.g., a mean elimination fraction for GAC, combi, ozonation and PAC.
}}

\item{STP_treatment_steps}{Required for compound_elimination_method \code{"compound_specific"}. A dataframe of strings with number of rows equal to length of vector ID,
and with four named columns indicating the following treatment steps:
\itemize{
\item nitrification, denitrification and P_elimination: \code{"TRUE"} or \code{"FALSE"} for STP nodes, and \code{"none"} for lakes or similar.
\item type_advanced_treatment: one of \code{"GAC"}, \code{"combi"}, \code{"ozonation"}, \code{"PAC"} or \code{"undefined"}, or any other (empty) string for lack of treatment or for lake nodes.
}}

\item{STP_elimination_rates}{Required for compound_elimination_method \code{"node_specific"}.
Numeric vector of length equal to ID, containing elimination fractions \verb{[0, 1]} for each STP node. Set elements to NA (or 0) for lakes.}

\item{with_lake_elimination}{Logical. Include elimination by lakes? Defaults to TRUE.}

\item{lake_eliminination_rates}{Numeric vector of length equal equal to ID, containing elimination fractions \verb{[0, 1]} for each lake node. Set elements to NA (or 0) for STPs.
Only used when with_lake_elimination is set to TRUE.}

\item{add_absolute_load}{Logical, with default FALSE. Add further absolute loads at each node, and in additional to the ones calculated
via compound_load_gramm_per_capita_and_day plus compound_elimination_method?}

\item{absolute_loads}{Numeric vector of length equal to ID with absolute loads to be added \verb{[g / d]}. Used if add_absolute_load set to TRUE.}

\item{return_data}{Strings \code{"loads"} (the default) or \code{"matrix"} to return either the calculated loads or the underlying node routing matrix.}
}
\value{
Depending on argument \code{return_data}, either the routing matrix (cp. \code{\link[=make_topology]{make_topology()}}) or a dataframe with the following named columns:
\itemize{
\item \code{ID}: Node IDs of STPs and lakes
\item \code{input_load_local_g_d}: compound amount released into each STP \verb{[g / d]}, i.e., inhabitants * compound_load_gramm_per_capita_and_day
\item \code{load_local_g_d}: compound amount discharged from each STP after elimination \verb{[g / d]}
\item \code{load_cumulated_g_d}: cumulated compound amount just downstream of each STP or lake \verb{[g / d]}
\item \code{inhabitants_cumulated}: cumulated number of inhabitants just downstream of each STP or lake
\item \code{node_count_cumulated}: cumulated number of nodes upstream of a each STP or lake node
}
}
\description{
Based on discharge via sewage treatment plantes (STPs) and the elimination rates in STPs
and lakes, this function estimates the locally released and cumulated loads of a compound along a river network.
}
\details{
This function estimates the aquatic loads of a single compound in a river network consisting of STP and lake nodes in several steps:

Firstly, the local input into each STP is derived from its connected number of inhabitants multiplied by a mean value of consumption for this compound.
(cp. returned \code{input_load_local_g_d}).

Secondly, fractions of this amount are either eliminated by a single STP-specific elimination rate (compound_elimination_method = \code{"node_specific"}) or
based on the treatment steps of each STP in combination with treatment-specific elimination rates of the compound (compound_elimination_method = \code{"compound_specific"}).

The loads thus released from each STP (cp. returned \code{load_local_g_d}) are then cumulated through the river network in a third step (cp. returned \code{load_cumulated_g_d}),
and with a routing based on \code{ID_next}.

Optionally, and in a fourth stage, these cumulated loads are further degraded in lakes (arguments \code{with_lake_elimination} and \code{lake_eliminination_rates})
or can receive additional absolut inputs via arguments \code{add_absolute_load} and \code{absolute_loads} (and which are not subject to any elimination).
For the lake elimination, all loads of upstream STPs are first summed and then reduced by the lake-specific \code{lake_eliminination_rates}.

The \code{"compound_specific"} elimination rates are set as a product, and as far as they are relevant at each STP based on input \code{STP_treatment_steps}.
If a treatment step is not present at an STP, the concerned entry in \code{compound_elimination_STP} is not multiplied into this product, except for
the nitrification step. If the latter is absent at an STP, compound_elimination_STP$COD_treatment is used as a factor instead.
}
\note{
There is no explicit indication as to whether an entry in vector ID represents an STP or a lake or something else.
Thus, the user has to take care (depending on function arguments compound_elimination_method and with_lake_elimination) that no entries other
than \code{"none"} or NA exist for lakes in inputs STP_treatment_steps or STP_elimination_rates, respectively;
and in turn no others than NAs in input lake_eliminination_rates for the STP nodes.

Note that the \code{absolute_loads}, if used, are not subjected to any elimination, regardless \code{"compound_specific"} or \code{"node_specific"} degradation.
}
\examples{

ID <- c(1, 2, 3, 4, 5)	# nodes: STP, STP, STP, lake, STP
ID_next <- c(4, 3, 4, 5, NA)	# node with ID = 5 has no downstream node (hence ID_next = NA)
inhabitants <- c(403, 150, 324, NA, 172)	# NA because no inhabitants discharge into the lake

compound_elimination_STP <- data.frame(
	COD_treatment = 0.5, nitrification = 0.6,
	denitrification = 0.2, P_elimination = 0.2,
	GAC = 0, combi = 0.05, ozonation = 0.7,
	PAC = 0.3, undefined = 0.12
)

STP_treatment_steps <- cbind(	# define presence of treatment steps
 "nitrification" = c("TRUE", "TRUE", "FALSE", "none", "TRUE"),
	"denitrification" = c("TRUE", "FALSE", "FALSE", "none", "TRUE"), 
	"P_elimination" = c("TRUE", "TRUE", "TRUE", "none", "TRUE"),
	"type_advanced_treatment" = c("GAC", "", "", "", "ozonation")
)

lake_eliminination_rates <- c(NA, NA, NA, 0.1, NA)	# set only for lake, NA otherwise

calc_load(
 ID = ID, 
 ID_next = ID_next, 
 inhabitants = inhabitants,	
 compound_load_gramm_per_capita_and_day = 100 * 1E-6,		
 compound_elimination_method = "compound_specific",
 compound_elimination_STP = compound_elimination_STP,
 STP_treatment_steps = STP_treatment_steps,
 with_lake_elimination = TRUE, 
 lake_eliminination_rates = lake_eliminination_rates
)


}
\seealso{
\code{\link[=wrap_table]{wrap_table()}}
}
